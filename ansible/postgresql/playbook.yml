---
- hosts: postgresql
  pre_tasks:
    - name: Install acl
      become: true
      ansible.builtin.package:
        name: acl
        state: present
    - name: Install bingo
      become: true
      ansible.builtin.get_url:
        url: "{{ bingo_source }}"
        dest: /usr/bin/bingo
        mode: '755'

  roles:
    - role: anxs.postgresql
      become: yes
      vars:
        # see https://github.com/ANXS/postgresql/issues/523
        ansible_python_interpreter: "/usr/bin/python3"
        postgresql_listen_addresses: "*"
        postgresql_pg_hba_default:
          - { type: local, database: all, user: all, address: "",             method: "{{ postgresql_default_auth_method }}", comment: '"local" is for Unix domain socket connections only' }
          - { type: host,  database: all, user: all, address: "127.0.0.1/32", method: "{{ postgresql_default_auth_method_hosts }}", comment: "IPv4 local connections:" }
          - { type: host,  database: all, user: all, address: "10.5.0.0/24", method: "{{ postgresql_default_auth_method_hosts }}", comment: "IPv4 local connections:" }
          - { type: local, database: all, user: "{{ postgresql_admin_user }}", address: "", method: "peer map=root_as_{{ postgresql_admin_user }}", comment: "Local root Unix user, passwordless access" }
        postgresql_databases:
          - name: "{{ pg_dbname }}"
            owner: "{{ pg_username }}"
        postgresql_users:
          - name: "{{ pg_username }}"
            # TODO secure the passwords
            pass: pass
            encrypted: yes  # if password should be encrypted, postgresql >= 10 does only accepts encrypted passwords
            state: "present"    # optional; one of 'present', 'absent'

  post_tasks:
    - name: Import bingo data
      ansible.builtin.command: bingo prepare_db